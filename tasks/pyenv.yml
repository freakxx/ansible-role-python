---
# file: roles/fubarhouse.python/tasks/pyenv.yml

- name: "PyEnv | Clean-up"
  become: yes
  become_user: "root"
  file:
    path: "{{ item }}"
    state: absent
  with_items:
   - "{{ fubarhouse_python.main_dir }}"
   - "{{ fubarhouse_python.pyenv_symlink_exec }}"
  when: fubarhouse_python.clean_install

- name: PyEnv | Ensure shell profiles are clean
  become: yes
  become_user: "{{ fubarhouse_user }}"
  lineinfile:
    dest: "{{ fubarhouse_python.user_dir }}/{{ item.filename }}"
    regexp: "{{ fubarhouse_python.main_dir }}/{{ fubarhouse_python.main_path }}/{{ fubarhouse_python.main_exec }} init -"
    line: "eval \"$({{ fubarhouse_python.main_dir }}/{{ fubarhouse_python.main_path }}/{{ fubarhouse_python.main_exec }} init -)\""
    state: absent
  with_items: "{{ fubarhouse_python.shell_profiles }}"
  ignore_errors: yes
  when: fubarhouse_python.clean_install

- name: "PyEnv | Check for pyenv"
  become: yes
  become_user: "{{ fubarhouse_user }}"
  stat:
    path: "{{ fubarhouse_python.main_dir }}"
  register: fubarhouse_python_pyenv_installed
  ignore_errors: yes
  no_log: yes

- name: "PyEnv Debug!"
  debug:
    msg: "{{ fubarhouse_python_pyenv_installed }}"
  failed_when: false

- name: "PyEnv | Check directory permissions"
  become: yes
  become_user: "root"
  file:
    path: "{{ fubarhouse_python.main_dir }}"
    state: directory
    mode: 0755
    owner: "{{ fubarhouse_python.user }}"
    recurse: yes
  when: fubarhouse_python_pyenv_installed.stat.exists == False

- name: PyEnv | Cloning/Updating
  become: yes
  become_user: "{{ fubarhouse_user }}"
  git:
    repo: "{{ fubarhouse_python.repo_pyenv }}"
    dest: "{{ fubarhouse_python.main_dir }}"
    clone: yes
    update: yes
    force: yes
    version: master
    recursive: false

- name: PyEnv | Cloning/Updating updater
  become: yes
  become_user: "{{ fubarhouse_user }}"
  git:
    repo: "{{ fubarhouse_python.repo_pyenv_updater }}"
    dest: "{{ fubarhouse_python.main_dir }}/{{ fubarhouse_python.updater_path }}"
    clone: yes
    update: yes
    force: yes
    version: master
    recursive: false
  # when: not pyenv_installed.stat.exists

- name: PyEnv | Ensure updated
  become: yes
  become_user: "{{ fubarhouse_user }}"
  shell: "{{ fubarhouse_python.main_dir }}/{{ fubarhouse_python.updater_path }}/{{ fubarhouse_python.updater_exec }}"

- name: PyEnv | Create an executable
  become: yes
  become_user: "root"
  file:
    src: "{{ fubarhouse_python.main_dir }}/{{ fubarhouse_python.main_path }}/{{ fubarhouse_python.main_exec }}"
    dest: "{{ fubarhouse_python.pyenv_symlink_exec }}"
    owner: "{{ fubarhouse_python.user }}"
    mode: 0755
    state: link

- name: PyEnv | Ensure shell profiles are available
  become: yes
  become_user: "{{ fubarhouse_user }}"
  file:
    path: "{{ fubarhouse_python.user_dir }}/{{ item.filename }}"
    state: touch
  with_items: "{{ fubarhouse_python.shell_profiles }}"
  ignore_errors: yes

- name: PyEnv | Ensure shell profiles are configured
  become: yes
  become_user: "{{ fubarhouse_user }}"
  lineinfile:
    dest: "{{ fubarhouse_python.user_dir }}/{{ item.filename }}"
    regexp: "{{ fubarhouse_python.main_dir }}/{{ fubarhouse_python.main_path }}/{{ fubarhouse_python.main_exec }} init -"
    line: "eval \"$({{ fubarhouse_python.main_dir }}/{{ fubarhouse_python.main_path }}/{{ fubarhouse_python.main_exec }} init -)\""
    state: present
  with_items: "{{ fubarhouse_python.shell_profiles }}"
  ignore_errors: yes

- name: PyEnv | Remove Shim
  file:
    path: "{{ fubarhouse_python.main_dir }}/shims/.pyenv-shim"
    state: absent

- name: PyEnv | Rehash
  shell: "{{ fubarhouse_python.pyenv_symlink_exec }} rehash"